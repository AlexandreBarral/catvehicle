<!--

Author: Jonathan Sprinkle, Sam Taylor, Alex Warren
Copyright (c) 2015 Arizona Board of Regents
All rights reserved.

Permission is hereby granted, without written agreement and without 
license or royalty fees, to use, copy, modify, and distribute this
software and its documentation for any purpose, provided that the 
above copyright notice and the following two paragraphs appear in 
all copies of this software.

IN NO EVENT SHALL THE ARIZONA BOARD OF REGENTS BE LIABLE TO ANY PARTY 
FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES 
ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN 
IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF 
SUCH DAMAGE.

THE ARIZONA BOARD OF REGENTS SPECIFICALLY DISCLAIMS ANY WARRANTIES, 
INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED HEREUNDER
IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATION
TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.

Summary:
========

This launch file applies a velocity profile to the leader car already loaded into the simulator.

Prerequisite:
=============

1. Load the world
roslaunch azcar_sim azcar_empty.launch

2. Load the leader
roslaunch azcar_sim humancar_spwan_nocmd.launch robot1:=azcar_sim X:=0 Y:=0 Z:=0 roll:=0 pitch:=0 yaw:=0

3. Load the follower
roslaunch azcar_sim humancar_spwan_nocmd.launch robot1:=follower_sim X:=10 Y:=0 Z:=0 roll:=0 pitch:=0 yaw:=0

How to execute this file?
roslaunch azcar_sim stepvel.launch leader_robot:=car1


-->


<launch>

 <param name="enable_statistics" value="true" />
      <arg name="leader_robot" default="catvehicle"/>
      <arg name="vel" default="20.0"/> <!-- 35.5 m/s is upper limit in the velocity-->
      <arg name="strAng" default="0"/>

<group ns="$(arg leader_robot)">
    <param name="constVel" value="$(arg vel)"/>
    <param name="strAngle" value="$(arg strAng)"/>
    <node pkg="stepvel" type="stepvel_node" name="stepvel_$(arg leader_robot)" output="screen" required="true">
        <remap from="cmd_vel" to="cmd_vel"/>
    </node>

<!--
<node name="recorder" pkg="rosbag" type="record" output="screen" args=" -o stepvel_ -a" />

    <node pkg="hoffmansubsystem" type="hoffmansubsystem_node" name="hoffmansubsystem_node_$(arg leader_robot)" output="screen" required="true">
    </node>
-->
<!--node pkg="sin_str0_leadervel_exp4_steer" type="sin_str0_leadervel_exp4_steer_node" name="sin_str0_leadervel_exp4_steer_$(arg leader_robot)" output="screen" required="true"-->
<!--node pkg="azcar_sim" type="leadercmd" name="leadercmd_$(arg leader_robot)" output="screen" required="true"-->
<!--
<node pkg="hoffmannfollower" type="hoffmannfollower_node" name="hoffmanfollower_$(arg leader_robot)" output="screen" required="true">
            <remap from="/azcar_sim/vel" to="/$(arg leader_robot)/vel"/>
            <remap from="/azcar_sim/steering" to="/$(arg leader_robot)/steering"/>
            <remap from="/azcar_sim/cmd_vel" to="/$(arg leader_robot)/cmd_vel"/>
            <remap from="/azcar_sim/cmd_vel_safe" to="/$(arg leader_robot)/cmd_vel_safe"/>
            <remap from="/azcar_sim/odom" to="/$(arg leader_robot)/odom"/>
            <remap from="/azcar_sim/waypoint" to="/$(arg leader_robot)/waypoint"/>
</node>
-->
<!--
<node pkg="azcar_sim" type="joy2cmdvel.py" name="joy2cmdvel" output="screen"
            required="true">
                <param name="namespace" value="/$(arg leader_robot)"/>
                    <remap from="/azcar_sim/cmd_vel" to="/$(arg leader_robot)/cmd_vel" />
                    </node>

-->
</group>


</launch>
